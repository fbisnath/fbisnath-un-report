getwd() #outputs the current working directory
#Plotting
ggplot(data=gapminder_1997)
#Plotting
ggplot(data=gapminder_1997) +
aes(x=gdpPercap)
#Plotting
ggplot(data=gapminder_1997) +
aes(x=gdpPercap) +
labs(x="GDP per Capita")
#Plotting
ggplot(data=gapminder_1997) +
aes(x=gdpPercap, y=lifeExp) +
labs(x="GDP per Capita", y="Life Expectancy")
#Plotting
ggplot(data=gapminder_1997) +
aes(x=gdpPercap, y=lifeExp) +
labs(x="GDP per Capita", y="Life Expectancy") +
geom_point()
#Plotting
ggplot(data=gapminder_1997) +
aes(x=gdpPercap, y=lifeExp) +
labs(x="GDP per Capita", y="Life Expectancy") +
geom_point() +
labs(title = "Do people in wealthy countries live longer?")
#Plotting
ggplot(data=gapminder_1997) +
aes(x=gdpPercap, y=lifeExp) +
labs(x="GDP per Capita", y="Life Expectancy") +
geom_point() +
labs(title = "Do people in wealthy countries live longer?") +
aes(color = continent)
#Plotting
ggplot(data=gapminder_1997) +
aes(x=gdpPercap, y=lifeExp) +
labs(x="GDP per Capita", y="Life Expectancy") +
geom_point() +
labs(title = "Do people in wealthy countries live longer?") +
aes(color = continent) +
scale_color_brewer(palette="Set1")
#Plotting
ggplot(data=gapminder_1997) +
aes(x=gdpPercap, y=lifeExp) +
labs(x="GDP per Capita", y="Life Expectancy") +
geom_point() +
labs(title = "Do people in wealthy countries live longer?") +
aes(color = continent) +
scale_color_brewer(palette="Pastel1")
#Plotting
ggplot(data=gapminder_1997) +
aes(x=gdpPercap, y=lifeExp) +
labs(x="GDP per Capita", y="Life Expectancy") +
geom_point() +
labs(title = "Do people in wealthy countries live longer?") +
aes(color = continent) +
scale_color_brewer(palette="PRGn")
#Plotting
ggplot(data=gapminder_1997) +
aes(x=gdpPercap, y=lifeExp) +
labs(x="GDP per Capita", y="Life Expectancy") +
geom_point() +
labs(title = "Do people in wealthy countries live longer?") +
aes(color = continent) +
scale_color_brewer(palette="Paired")
#Plotting
ggplot(data=gapminder_1997) +
aes(x=gdpPercap, y=lifeExp) +
labs(x="GDP per Capita", y="Life Expectancy") +
geom_point() +
labs(title = "Do people in wealthy countries live longer?") +
aes(color = continent) +
scale_color_brewer(palette="Dark2")
#Plotting
ggplot(data=gapminder_1997) +
aes(x=gdpPercap, y=lifeExp) +
labs(x="GDP per Capita", y="Life Expectancy") +
geom_point() +
labs(title = "Do people in wealthy countries live longer?") +
aes(color = continent) +
scale_color_brewer(palette="Dark2") +
aes(size=population)
#Plotting
ggplot(data=gapminder_1997) +
aes(x=gdpPercap, y=lifeExp) +
labs(x="GDP per Capita", y="Life Expectancy") +
geom_point() +
labs(title = "Do people in wealthy countries live longer?") +
aes(color = continent) +
scale_color_brewer(palette="Dark2") +
aes(size=pop)
#Plotting
ggplot(data=gapminder_1997) +
aes(x=gdpPercap, y=lifeExp) +
labs(x="GDP per Capita", y="Life Expectancy") +
geom_point() +
labs(title = "Do people in wealthy countries live longer?") +
aes(color = continent) +
scale_color_brewer(palette="Dark2") +
aes(size=pop/1000000)
#Plotting
ggplot(data=gapminder_1997) +
aes(x=gdpPercap, y=lifeExp) +
labs(x="GDP per Capita", y="Life Expectancy") +
geom_point() +
labs(title = "Do people in wealthy countries live longer?") +
aes(color = continent) +
scale_color_brewer(palette="Dark2") +
aes(size=pop/1000000) +
labs(size="Population in millions")
#Plotting
ggplot(data=gapminder_1997) +
aes(x=gdpPercap, y=lifeExp) +
labs(x="GDP per Capita", y="Life Expectancy") +
geom_point() +
labs(title = "Do people in wealthy countries live longer?") +
aes(color = continent) +
scale_color_brewer(palette="Dark2") +
aes(size=pop/1000000) +
labs(size="Population in millions", continent="Continent")
#Plotting
ggplot(data=gapminder_1997) +
aes(x=gdpPercap, y=lifeExp, color = continent, size=pop/1000000) +
labs(x="GDP per Capita", y="Life Expectancy", title = "Do people in wealthy countries live longer?", size="Population in millions") +
geom_point() +
scale_color_brewer(palette="Dark2")
#Plotting
ggplot(data=gapminder_1997) +
aes(x=gdpPercap, y=lifeExp, color = continent, size=pop/1000000) +
labs(x="GDP per Capita", y="Life Expectancy", title = "Do people in wealthy countries live longer?", size="Population in millions") +
geom_point() +
scale_color_brewer(palette="a_palette")
#Plotting
ggplot(data=gapminder_1997) +
aes(x=gdpPercap, y=lifeExp, color = continent, size=pop/1000000) +
labs(x="GDP per Capita", y="Life Expectancy", title = "Do people in wealthy countries live longer?", size="Population in millions") +
geom_point() +
scale_color_brewer(palette="ppalette")
#Plotting
ggplot(data=gapminder_1997) +
aes(x=gdpPercap, y=lifeExp, color = continent, size=pop/1000000) +
labs(x="GDP per Capita", y="Life Expectancy", title = "Do people in wealthy countries live longer?", size="Population in millions") +
geom_point() +
scale_color_brewer(palette="ppalette")
#Plotting
ggplot(data=gapminder_1997) +
aes(x=gdpPercap, y=lifeExp, color = continent, size=pop/1000000) +
labs(x="GDP per Capita", y="Life Expectancy", title = "Do people in wealthy countries live longer?", size="Population in millions") +
geom_point() +
scale_color_brewer(palette="spalette")
import(awtools)
#Plotting for data exploration
gapminder_data <- read_csv("gapminder_data.csv")
ggplot(data=gapminder_data) +
aes(x=year, y=lifeExp, color=continent) +
geom_point()
ggplot(data=gapminder_data) +
aes(x=year, y=lifeExp, color=continent) +
geom_line()
ggplot(data=gapminder_data) +
aes(x=year, y=lifeExp, color=continent, group=country) +
geom_line()
ggplot(data=gapminder_data) +
aes(x=continent, y=lifeExp, color=continent) +
geom_boxplot()
ggplot(data=gapminder_data) +
aes(x=continent, y=lifeExp, color=continent, group=country) +
geom_boxplot()
ggplot(data=gapminder_data) +
aes(x=continent, y=lifeExp, color=continent) +
geom_boxplot()
ggplot(data=gapminder_data) +
aes(x=continent, y=lifeExp, color=continent) +
geom_boxplot(), show.legend = FALSE
ggplot(data=gapminder_data) +
aes(x=continent, y=lifeExp, color=continent) +
geom_boxplot(aes(fill=dose))
geom_boxplot(aes(fill=dose)
ggplot(data=gapminder_data) +
ggplot(data=gapminder_data) +
aes(x=continent, y=lifeExp, color=continent) +
geom_boxplot()
ggplot(data=gapminder_data) +
aes(x=continent, y=lifeExp) +
geom_boxplot(aes=fill=dose)
ggplot(data=gapminder_data) +
aes(x=continent, y=lifeExp, color=continent) +
geom_violin()
ggplot(data=gapminder_data) +
aes(x=continent, y=lifeExp, color=continent) +
geom_violin() +
geom_point()
ggplot(data=gapminder_data) +
aes(x=continent, y=lifeExp, color=continent) +
geom_violin() +
geom_point()
ggplot(data=gapminder_data) +
aes(x=continent, y=lifeExp, color=continent) +
geom_violin() +
geom_point()
ggplot(data=gapminder_1997) +
aes(x=continent, y=lifeExp, color=continent) +
geom_violin() +
geom_point()
ggplot(data=gapminder_1997) +
aes(x=continent, y=lifeExp, color=continent) +
geom_violin() +
geom_jitter()
ggplot(data=gapminder_1997) +
aes(x=continent, y=lifeExp, color=continent) +
geom_violin() +
geom_jitter()
ggplot(data=gapminder_1997) +
aes(x=continent, y=lifeExp, color=continent) +
geom_violin() +
geom_jitter()
ggplot(data=gapminder_1997) +
aes(x=continent, y=lifeExp, color=continent) +
geom_jitter() + #positioning of jittered points is random
geom_violin()
ggplot(data=gapminder_1997, aes(x=continent, y=lifeExp, color=continent)) + #does aesthetics for the entire plot, aesthetic can be passed to single geoms
geom_violin() + #positioning of jittered points is random
geom_jitter() #ordering of functions matters, in this case the violin plot is lying over the points, plot is being built in layers
ggplot(data=gapminder_1997, aes(x=continent, y=lifeExp, color=continent)) + #does aesthetics for the entire plot, aesthetic can be passed to single geoms
geom_violin(aes(size=pop)) + #positioning of jittered points is random
geom_jitter() #ordering of functions matters, in this case the violin plot is lying over the points, plot is being built in layers
ggplot(data=gapminder_1997, aes(x=continent, y=lifeExp, color=continent)) + #does aesthetics for the entire plot, aesthetic can be passed to single geoms
geom_violin() + #positioning of jittered points is random
geom_jitter(aes(size=pop)) #ordering of functions matters, in this case the violin plot is lying over the points, plot is being built in layers
ggplot(data=gapminder_1997, aes(x=continent, y=lifeExp)) + #does aesthetics for the entire plot, aesthetic can be passed to single geoms
geom_violin() + #positioning of jittered points is random
geom_jitter(aes(size=pop, color=pink)) #ordering of functions matters, in this case the violin plot is lying over the points, plot is being built in layers
ggplot(data=gapminder_1997, aes(x=continent, y=lifeExp)) + #does aesthetics for the entire plot, aesthetic can be passed to single geoms
geom_violin() + #positioning of jittered points is random
geom_jitter(aes(size=pop, color="pink")) #ordering of functions matters, in this case the violin plot is lying over the points, plot is being built in layers
ggplot(data=gapminder_1997, aes(x=continent, y=lifeExp)) + #does aesthetics for the entire plot, aesthetic can be passed to single geoms
geom_violin(color="pink") + #positioning of jittered points is random
geom_jitter(aes(size=pop)) #ordering of functions matters, in this case the violin plot is lying over the points, plot is being built in layers
ggplot(data=gapminder_1997, aes(x=continent, y=lifeExp)) + #does aesthetics for the entire plot, aesthetic can be passed to single geoms
geom_violin(fill ="pink") + #positioning of jittered points is random
geom_jitter(aes(size=pop)) #ordering of functions matters, in this case the violin plot is lying over the points, plot is being built in layers
ggplot(data=gapminder_1997, aes(x=continent, y=lifeExp)) + #does aesthetics for the entire plot, aesthetic can be passed to single geoms
geom_violin(aes(fill=continent)) + #positioning of jittered points is random
geom_jitter(aes(size=pop)) #ordering of functions matters, in this case the violin plot is lying over the points, plot is being built in layers
colors()
sample(colors(), size=10)
ggplot(data=gapminder_1997, aes(x=continent, y=lifeExp)) + #does aesthetics for the entire plot, aesthetic can be passed to single geoms
geom_violin(aes(fill=continent)) + #positioning of jittered points is random
geom_jitter(alpha=0.7) #ordering of functions matters, in this case the violin plot is lying over the points, plot is being built in layers
ggplot(data=gapminder_1997) +
aes(x=lifeExp) +
geom_histogram()
ggplot(data=gapminder_1997) +
aes(x=lifeExp) +
geom_histogram(bins=20)
ggplot(data=gapminder_1997) +
aes(x=lifeExp) +
geom_density(bins=20)
ggplot(data=gapminder_1997) +
aes(x=lifeExp) +
geom_dotplot(bins=20)
ggplot(data=gapminder_1997) +
aes(x=lifeExp) +
geom_qq(bins=20)
ggplot(data=gapminder_1997) +
aes(x=lifeExp) +
geom_qq()
ggplot(data=gapminder_1997) +
aes(x=lifeExp) +
geom_area(bins=20)
ggplot(data=gapminder_1997) +
aes(x=lifeExp) +
geom_area()
ggplot(data=gapminder_1997) +
aes(x=lifeExp) +
geom_density(bins=20)
ggplot(data=gapminder_1997) +
aes(x=lifeExp) +
geom_freqpoly(bins=20) #bins in this sense sets the number of bins to fit all the data in, bin width, or something like that would be the number of items in a bin
ggplot(data=gapminder_1997) +
aes(x=lifeExp) +
geom_density(bins=20) #bins in this sense sets the number of bins to fit all the data in, bin width, or something like that would be the number of items in a bin
#ggplot2 Themes
ggplot(data=gapminder_1997) +
aes(x=lifeExp) +
geom_histogram() +
theme_classic()
#ggplot2 Themes
ggplot(data=gapminder_1997) +
aes(x=lifeExp) +
geom_histogram() +
theme_minimal()
#ggplot2 Themes
ggplot(data=gapminder_1997) +
aes(x=lifeExp) +
geom_histogram() +
theme_minimal() +
p + theme(axis.text.x = element_text(angle = 90))
#ggplot2 Themes
ggplot(data=gapminder_1997) +
aes(x=lifeExp) +
geom_histogram() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90))
#ggplot2 Themes
ggplot(data=gapminder_1997) +
aes(x=lifeExp) +
geom_histogram() +
theme_dark() +
theme(axis.text.x = element_text(angle = 90))
#ggplot2 Themes
ggplot(data=gapminder_1997) +
aes(x=lifeExp) +
geom_histogram() +
theme_void() +
theme(axis.text.x = element_text(angle = 90))
#ggplot2 Themes
ggplot(data=gapminder_1997) +
aes(x=lifeExp) +
geom_histogram() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90))
?theme
#ggplot2 Themes
ggplot(data=gapminder_1997) +
aes(x=lifeExp) +
geom_histogram() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45))
#ggplot2 Themes
ggplot(data=gapminder_1997) +
aes(x=lifeExp) +
geom_histogram() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust=0.5, hjust=1))
#Facet
ggplot(data=gapminder_1997) +
aes(x=gdpPercap, y=lifeExp) +
geom_point()
#Facet
ggplot(data=gapminder_1997) +
aes(x=gdpPercap, y=lifeExp) +
geom_point() +
facet_wrap(vars(continent))
ggplot(data=gapminder_1997) +
aes(x=gdpPercap, y=lifeExp) +
geom_point() +
facet_grid(rows = vars(continent))
#Saving
ggsave("awesomeplot.jpg",
width=6,
height=4)
violin_plot <- ggplot(data=gapminder_1997) +
aes(x=continent, y=lifeExp) +
geom_violin(aes(fill=continent))
violin_plot
violin_plot + theme_bw()
violin_plot <- violin_plot + theme_bw()
ggsave(plot=violin_plot,
filename="awesome_violin_plot.jpg",
width=6,
height=4) #inches is default in ggplot
#Animated plots
install.packages(c("gganimate", "gifski"))
library(gganimate)
library(gifski)
ggplot(data=gapminder_data) +
aes(x=log(gdpPercap), y=lifeExp, size=pop, color=continent) +
geom_point()
staticHansPlot <- ggplot(data=gapminder_data) +
aes(x=log(gdpPercap), y=lifeExp, size=pop/1000000, color=continent) +
geom_point(alpha=0.5) +
scale_color_brewer(palette="Set1") +
labs(x="GDP Per Capita", y="LifeE Expectancy", color="Continent", size="Population in millions") +
theme_classic
staticHansPlot <- ggplot(data=gapminder_data) +
aes(x=log(gdpPercap), y=lifeExp, size=pop/1000000, color=continent) +
geom_point(alpha=0.5) +
scale_color_brewer(palette="Set1") +
labs(x="GDP Per Capita", y="LifeE Expectancy", color="Continent", size="Population in millions") +
theme_classic()
staticHansPlot <- ggplot(data=gapminder_data) +
aes(x=log(gdpPercap), y=lifeExp, size=pop/1000000, color=continent) +
geom_point(alpha=0.5) +
scale_color_brewer(palette="Set1") +
labs(x="GDP Per Capita", y="Life Expectancy", color="Continent", size="Population in millions") +
theme_classic()
staticHansPlot
animatedHansPlot <- staticHansPlot +
transition_states(year, transition_length = 1, state_length = 1) +
ggtitle("{closest_state}")
animatedHansPlot
ggsave(plot=animatedHansPlot,
filename="learning.gif",
width=6,
height=4)
anim_save("HansAnimatedPlot.gif",
plot=animatedHansPlot,
renderer=gifski_renderer())
#Iris
data("iris")
view(iris)
ggplot(data="iris") +
geom_histogram()
#Iris
data <- data("iris")
ggplot(data=data) +
geom_histogram()
#Iris
irisdata <- data("iris")
ggplot(data=irisdata) +
geom_histogram()
ggplot(data="irisdata") +
geom_histogram()
data()
head(attitude)
data(attitude)
rlang::last_error()
data(attitude)
force(attitude)
ggplot(data=attitude)
ggplot(data=attitude) +
aes (x="rating", y="critical")
ggplot(data=attitude) +
aes (x="rating", y="critical") +
geom_histogram()
ggplot(data=attitude) +
aes (x="rating", y="critical") +
geom_density()
ggplot(data=attitude) +
aes (x="rating", y="learning") +
geom_point()
ggplot(data=attitude) +
aes(x=learning) +
geom_histogram() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust=0.5, hjust=1))
ggplot(data=attitude) +
aes(x=learning, y=crtical) +
geom_smooth() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust=0.5, hjust=1))
ggplot(data=attitude) +
aes(x=learning, y=critical) +
geom_smooth() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust=0.5, hjust=1))
ggplot(data=attitude) +
aes(x=learning, y=critical) +
geom_curve() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust=0.5, hjust=1))
ggplot(data=attitude) +
aes(x=learning, y=critical) +
geom_point() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust=0.5, hjust=1))
ggplot(data=attitude) +
aes(x=privileges, y=rating) +
geom_point() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust=0.5, hjust=1))
ggplot(data=attitude) +
aes(x=privileges, y=rating) +
geom_quantile() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust=0.5, hjust=1))
ggplot(data=attitude) +
aes(x=privileges, y=rating) +
geom_point() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust=0.5, hjust=1))
ggplot(data=attitude) +
aes(x=privileges, y=rating) +
geom_point() +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, vjust=0.5, hjust=1))
ggplot(data=attitude) +
aes(x=privileges, y=rating) +
geom_point(color="pink") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, vjust=0.5, hjust=1))
colors()
ggplot(data=attitude) +
aes(x=privileges, y=rating) +
geom_point(color="thistle2") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, vjust=0.5, hjust=1))
ggplot(data=attitude) +
aes(x=privileges, y=rating) +
geom_point(color="tomato1") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, vjust=0.5, hjust=1))
ggplot(data=attitude) +
aes(x=privileges, y=rating) +
geom_point(color="tomato1") +
theme_dark() +
theme(axis.text.x = element_text(angle = 45, vjust=0.5, hjust=1))
ggplot(data=attitude) +
aes(x=privileges, y=rating) +
geom_point(color="sienna1") +
theme_dark() +
theme(axis.text.x = element_text(angle = 45, vjust=0.5, hjust=1))
ggplot(data=attitude) +
aes(x=privileges, y=rating) +
geom_point(color="sienna1") +
theme_dark() +
labs(x="Privileges", y="Rating")
ggplot(data=attitude) +
aes(x=privileges, y=rating) +
geom_point(color="sienna1") +
theme_dark() +
labs(x="Privileges", y="Rating", title="How rating changes with privileges")
